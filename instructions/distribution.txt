BUILD & DISTRIBUTE PRE-COMPILED WHEEL
-------------------------------------

1. Install MinGW and ensure gcc is in your PATH.
    MacOS: brew install gcc
    Windows: download mingw-get-setup.exe installer

2. Ensure you have the required dependencies
    brew install igraph  # macOS (Homebrew)
    sudo apt install libigraph-dev  # Linux (Debian-based)

3. Compile the C extension
    python setup.py build_ext --inplace  # MacOS/Linux
    python setup.py build_ext --compiler=mingw32 --inplace  # Windows
    python -c "import sgt_c_module"

4. Create a wheel (.whl)
    python -m build --OR-- python setup.py bdist_wheel

5. Install the wheel without needing compilation
    pip install dist/sgt-1.4.5-cp39-cp39-macosx_10_9_x86_64.whl
    or
    pip install sgt-1.4.5-cp39-cp39-win_amd64.whl

CREATING AN EXECUTABLE WITH PyInstaller
---------------------------------------

1. Install Pyinstaller with pip:
    pip install pyinstaller

2. Run PyInstaller once to create the .spec file:
     pyinstaller --windowed --onefile --icon=icon.ico src/StructuralGT.py    # creates StructuralGT.spec

3. Modify the first part of StructuralGT.spec (a) to look like this:

import os
from PyInstaller.utils.hooks import collect_submodules
a = Analysis(
    ['src/StructuralGT.py'],
    pathex=[os.path.abspath("src")],  # Absolute path for reliability
    binaries=[],
    datas=[('src/StructuralGT/apps/sgt_qml', 'StructuralGT/apps/sgt_qml')],  # Fix relative path
    hiddenimports=['PySide6.QtQml', 'PySide6.QtQuick'],  # Add PySide6 dependencies
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    noarchive=False,
    optimize=0,
)

4. Run PyInstaller with .spec file. The executable is in dist/ folder:
    pyinstaller StructuralGT-Win.spec

5. For Windows, use Inno Setup to create an installer